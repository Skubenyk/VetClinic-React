{"version":3,"file":"static/js/276.66f90af5.chunk.js","mappings":"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","sources":["webpack://skubenyk-module-3/./src/components/registration/registration.module.scss?97d2","components/registration/Registration.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"registration_icon__EgcYp\",\"modal\":\"registration_modal__KY4XC\",\"active\":\"registration_active__cQdY0\",\"form\":\"registration_form__z2U7V\",\"title\":\"registration_title__rqocw\",\"wrapper\":\"registration_wrapper__CLGWn\",\"input\":\"registration_input__t5mqv\",\"firstName\":\"registration_firstName__9kVW8\",\"buttonSubmit\":\"registration_buttonSubmit__oKNi0\",\"buttonClose\":\"registration_buttonClose__ixIW6\",\"error\":\"registration_error__czLpN\"};","//*Registration\r\n// *Import base\r\nimport styles from './registration.module.scss';\r\nimport classNames from 'classnames';\r\n\r\n// *Import Formik libraries for creating forms\r\nimport { useFormik } from 'formik';\r\n\r\n// *Import Yup libraries for validation forms\r\nimport * as Yup from 'yup';\r\n\r\nconst Registration = ({ active, setActive }) => {\r\n  //*Formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      userName: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n    //*Validation\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string()\r\n        .min(2, 'Минимум 2 символова')\r\n        .required('Обязательное поле!'),\r\n      lastName: Yup.string()\r\n        .min(2, 'Минимум  2 символов')\r\n        .required('Обязательное поле!'),\r\n      userName: Yup.string()\r\n        .min(4, 'Минимум  4 символов')\r\n        .required('Обязательное поле!'),\r\n      email: Yup.string()\r\n        .email('Неправильный email адрес')\r\n        .required('Обязательное поле!'),\r\n      password: Yup.string()\r\n        .min(6, 'Минимум  6 символов')\r\n        .required('Обязательное поле!'),\r\n    }),\r\n    onSubmit: (values, { setSubmitting, resetForm }) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n      setTimeout(() => {\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }, 400);\r\n    },\r\n  });\r\n  //*Sending data form\r\n  fetch(\r\n    'https://beetroot-solodkui.herokuapp.com/beetroot-solodkui/users/registration',\r\n    {\r\n      method: 'POST',\r\n      headers: { Registration: 'form registration' },\r\n      body: JSON.stringify(formik),\r\n    }\r\n  )\r\n    .then((response) => response.json())\r\n    .then((result) => console.log(result));\r\n  return (\r\n    <div\r\n      //*Сonditions for switching styles in mode active\r\n      className={\r\n        active ? classNames(styles.modal, styles.active) : styles.modal\r\n      }\r\n      onClick={() => setActive(false)}\r\n    >\r\n      {/* Form */}\r\n      <form\r\n        className={styles.form}\r\n        method='post'\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        {/* Title form */}\r\n        <h2 className={styles.title}>РЕГИСТРАЦИЯ</h2>\r\n        <div className={styles.wrapper}>\r\n          {/* First name */}\r\n          <label className={styles.label} htmlFor='firstName'></label>\r\n          <input\r\n            className={classNames(styles.input, styles.firstName)}\r\n            name='firstName'\r\n            placeholder='Имя'\r\n            type='text'\r\n            value={formik.values.firstName}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          {/* Conditions for including a style error */}\r\n          {formik.errors.firstName && formik.touched.firstName ? (\r\n            <div className={styles.error}>{formik.errors.firstName}</div>\r\n          ) : null}\r\n          {/* Last name */}\r\n          <label className={styles.label} htmlFor='lastName'></label>\r\n          <input\r\n            className={classNames(styles.input, styles.lastName)}\r\n            name='lastName'\r\n            placeholder='Фамилия'\r\n            type='text'\r\n            value={formik.values.lastName}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          {/* Conditions for including a style error */}\r\n          {formik.errors.lastName && formik.touched.lastName ? (\r\n            <div className={styles.error}>{formik.errors.lastName}</div>\r\n          ) : null}\r\n          {/* User name */}\r\n          <label className={styles.label} htmlFor='userName'></label>\r\n          <input\r\n            className={classNames(styles.input, styles.userName)}\r\n            name='userName'\r\n            placeholder='Имя пользователя'\r\n            type='text'\r\n            value={formik.values.userName}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          {/* Conditions for including a style error */}\r\n          {formik.errors.userName && formik.touched.userName ? (\r\n            <div className={styles.error}>{formik.errors.userName}</div>\r\n          ) : null}\r\n          {/* Email */}\r\n          <label className={styles.label} htmlFor='email'></label>\r\n          <input\r\n            className={classNames(styles.input, styles.email)}\r\n            name='email'\r\n            placeholder='Почта'\r\n            type='email'\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          {/* Conditions for including a style error */}\r\n          {formik.errors.email && formik.touched.email ? (\r\n            <div className={styles.error}>{formik.errors.email}</div>\r\n          ) : null}\r\n          {/* Password */}\r\n          <label className={styles.label} htmlFor='password'></label>\r\n          <input\r\n            className={classNames(styles.input, styles.password)}\r\n            name='password'\r\n            placeholder='Пароль'\r\n            type='password'\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          {/* Conditions for including a style error */}\r\n          {formik.errors.password && formik.touched.password ? (\r\n            <div className={styles.error}>{formik.errors.password}</div>\r\n          ) : null}\r\n          {/* Buttons */}\r\n          <div className={styles.button}>\r\n            <button\r\n              className={styles.buttonSubmit}\r\n              type='submit'\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <span>Регистрация</span>\r\n            </button>\r\n            <button\r\n              //*Close form\r\n              className={styles.buttonClose}\r\n              type='button'\r\n            >\r\n              <span>ЗАКРЫТЬ </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"names":["active","setActive","formik","useFormik","initialValues","firstName","lastName","userName","email","password","validationSchema","Yup","min","required","onSubmit","values","setSubmitting","resetForm","console","log","JSON","stringify","setTimeout","fetch","method","headers","Registration","body","then","response","json","result","className","classNames","styles","onClick","handleSubmit","htmlFor","name","placeholder","type","value","onChange","handleChange","onBlur","handleBlur","e","stopPropagation","errors","touched"],"sourceRoot":""}